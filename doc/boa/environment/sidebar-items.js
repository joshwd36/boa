initSidebarItems({"enum":[["ErrorKind",""]],"mod":[["declarative_environment_record","Declarative RecordsEach declarative Environment Record is associated with an ECMAScript program scope containing variable, `constant`, `let`, `class`, `module`, `import`, and/or function declarations. A declarative Environment Record binds the set of identifiers defined by the declarations contained within its scope. More info:  ECMA-262 sec-declarative-environment-records"],["environment_record_trait","Environment Recordshttps://tc39.es/ecma262/#sec-environment-records https://tc39.es/ecma262/#sec-lexical-environments"],["function_environment_record","Function Environment RecordsA function Environment Record is a declarative Environment Record that is used to represent the top-level scope of a function and, if the function is not an `ArrowFunction`, provides a `this` binding. If a function is not an `ArrowFunction` function and references super, its function Environment Record also contains the state that is used to perform super method invocations from within the function. More info: https://tc39.es/ecma262/#sec-function-environment-records"],["global_environment_record","Global Environment RecordsA global Environment Record is used to represent the outer most scope that is shared by all of the ECMAScript Script elements that are processed in a common realm. A global Environment Record provides the bindings for built-in globals (clause 18), properties of the global object, and for all top-level declarations (13.2.8, 13.2.10) that occur within a Script. More info:  https://tc39.es/ecma262/#sec-global-environment-records"],["lexical_environment","Lexical Environmenthttps://tc39.es/ecma262/#sec-lexical-environment-operations"],["object_environment_record","Object RecordsEach object Environment Record is associated with an object called its binding object. An object Environment Record binds the set of string identifier names that directly correspond to the property names of its binding object. Property keys that are not strings in the form of an `IdentifierName` are not included in the set of bound identifiers. More info:  Object Records"]]});